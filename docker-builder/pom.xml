<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>CounterWebApp</artifactId>
	<packaging>pom</packaging>
	<name>docker-builder</name>
	<url>http://maven.apache.org</url>
	
	<parent>
           <groupId>com.mkyong</groupId>
	   <version>1.0</version>
	   <artifactId>CounterWebApp</artifactId>
	   <relativePath>../pom.xml</relativePath>
        </parent>
	<properties>
		<push.image>false</push.image>
		<docker.registry>23.101.66.130</docker.registry>
		<docker.image.name>cwa</docker.image.name>
		<service.artifactId>CounterWebApp</service.artifactId>
	</properties>

	<dependencies>
	    <dependency>
		<groupId>com.mkyong</groupId>
		<artifactId>${service.artifactId}</artifactId>
		<version>${project.parent.version}</version>
            </dependency>
	</dependencies>
	<build>
	     <resources>
	         <resource>
		    <directory>${project.basedir}</directory>
 		    <filtering>true</filtering>
                    <includes>
                       <include>**/Dockerfile</include>
		    </includes>
	         </resource>
             </resources>
	     <pluginManagement>
		<plugins>
		    <!-- Eclipse project -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.9</version>
			<configuration>
			        <!-- Always download and attach dependencies source code -->
				<downloadSources>true</downloadSources>
				<downloadJavadocs>false</downloadJavadocs>
				<!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
				<wtpversion>2.0</wtpversion>
			</configuration>
		  </plugin>
		  <plugin>
    		     <groupId>com.spotify</groupId>
		     <artifactId>docker-maven-plugin</artifactId>
		     <version>1.1.1</version>
		     <executions>
        		<execution>
            		   <phase>package</phase>
            		   <goals>
                	     <goal>build</goal>
            		   </goals>
       		        </execution>
    		     </executions>
 		     <configuration>
                         <dockerDirectory>${project.basedir}</dockerDirectory>
                         <imageName>${docker.image.name}</imageName>
			 <pushImage>true</pushImage>
                     <resources>
                        <resource>
                          <targetPath>/</targetPath>
                          <directory>${project.basedir}</directory>
                          <excludes>
                            <exclude>target/**/*</exclude>
                            <exclude>pom.xml</exclude>
                            <exclude>*.iml</exclude>
                          </excludes>
                        </resource>
                        <resource>
                          <targetPath>/</targetPath>
                          <directory>${project.build.directory}</directory>
                          <include>CounterWebApp.war</include>
                        </resource>
                     </resources>
                     </configuration>
                  </plugin>
		  <!-- Set JDK Compiler Level -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.2</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
			</configuration>
		  </plugin>
		  <!-- For Maven Tomcat Plugin -->
		  <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<configuration>
				<path>/CounterWebApp</path>
			</configuration>
		  </plugin>
		</plugins>
	     </pluginManagement>
	</build>
        <profiles>
	   <profile>
              <id>docker-remote</id>
 	      <build>
                 <plugins>
		    <plugin>
                       <groupId>com.spotify</groupId>
                       <artifactId>docker-maven-plugin</artifactId>
                       <configuration>
			  <serverId>localnexus</serverId>
			  <pushImage>true</pushImage>
                          <pushImage>${docker.registry}/${docker.image.name}</pushImage>
                       </configuration>
                    </plugin>
                 </plugins>
              </build>
           </profile>
        </profiles>
</project>
